<?xml version="1.0" encoding="utf-8"?>
<!--
 ~ Copyright (c) WSO2 Inc. (http://wso2.com) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.wso2.carbon</groupId>
        <artifactId>carbon-kernel</artifactId>
        <version>4.4.41-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>org.wso2.carbon.http.bridge</artifactId>
    <packaging>bundle</packaging>
    <name>WSO2 Carbon - HTTP Bridge</name>
    <description>
        There are two ways to use OSGi in server-side[1].
        In Carbon, what we have done is, embedding an OSGi framework inside a servlet container.
        So BridgeServlet delegates all the request from the servlet container to the
        HttpServiceServlet registered by the http.bridge bundle. This is required only
        when Carbon is running inside a webapp.

        There is a possibility to embed an HTTP server(ex. jetty) inside equinox and
        start a server with all our carbon bundles. This is same as running carbon
        inside spring DM server. For this scenario, we do not need
        org.wso2.carbon.http.bridge bundles and the org.wso2.carbon.bridge extension bundle.

        1. http://eclipse.org/equinox/server/http_quickstart.php
    </description>
    <url>http://wso2.org</url>

    <dependencies>
        <dependency>
            <groupId>org.wso2.eclipse.osgi</groupId>
            <artifactId>org.eclipse.osgi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.carbon</groupId>
            <artifactId>org.wso2.carbon.bridge</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.equinox</groupId>
            <artifactId>org.eclipse.equinox.http.servlet</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Name>${project.artifactId}</Bundle-Name>
                        <Bundle-Activator>org.wso2.carbon.http.bridge.HttpBridgeActivator</Bundle-Activator>
                        <Export-Package>org.wso2.carbon.http.bridge</Export-Package>
                        <Import-Package>
                            !org.wso2.carbon.http.bridge,
                            org.osgi.framework.*,
                            org.wso2.carbon.bridge.*,
                            org.eclipse.equinox.http.servlet,
                            javax.servlet; version="${imp.pkg.version.javax.servlet}",
                            javax.servlet.http; version="${imp.pkg.version.javax.servlet}",
                            *;resolution:=optional
                        </Import-Package>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
